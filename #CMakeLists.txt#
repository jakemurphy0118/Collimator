# $Id: CMakeLists.txt 68058 2013-03-13 14:47:43Z gcosmo $

#----------------------------------------------------------------------------
# Setup the project
cmake_minimum_required(VERSION 2.6 FATAL_ERROR)
project(CALIOPE)
SET(Boost_INCLUDE_DIR /opt/local/include/)
SET(Boost_LIBRARY_DIR /opt/local/lib/)
find_package(Boost COMPONENTS system filesystem REQUIRED)
include_directories(${Boost_INCLUDE_DIR})
link_directories(${Boost_LIBRARY_DIR})
SET(CMAKE_MODULE_PATH /nas02/home/j/a/jakedm/Applications/geant4.10.01.p02/cmake/Modules/)
SET(GCC_COVERAGE_COMPILE_FLAGS "-w")

add_definitions(${GCC_COVERAGE_COMPILE_FLAGS})
#----------------------------------------------------------------------------
# Find ROOT Package
find_package(ROOT)
#----------------------------------------------------------------------------
# Setup ROOT include directories and compile definitions
include(${CMAKE_MODULE_PATH}FindROOT.cmake)
include_directories(${ROOT_INCLUDE_DIR})
link_directories(${ROOT_LIBRARY_DIR})
link_directories(/nas02/home/j/a/jakedm/root_v5.34.32/lib)
include_directories(/nas02/home/j/a/jakedm/root_v5.34.32/include)

#----------------------------------------------------------------------------
# Find Geant4 package, activating all available UI and Vis drivers by default
# You can set WITH_GEANT4_UIVIS to OFF via the command line or ccmake/cmake-gui
# to build a batch mode only executable
option(WITH_GEANT4_UIVIS "Build example with Geant4 UI and Vis drivers" ON)
if(WITH_GEANT4_UIVIS)
  find_package(Geant4 REQUIRED ui_all vis_all)
else()
  find_package(Geant4 REQUIRED)
endif()

#----------------------------------------------------------------------------
# Setup Geant4 include directories and compile definitions
# Setup include directory for this project
#
include(${Geant4_USE_FILE})
include_directories(${PROJECT_SOURCE_DIR}/include)

#----------------------------------------------------------------------------


#set(ROOTPWA_DICTIONARY /nas02/home/c/b/cbartram/geant4_workdir/dictionary/RootOutputDataCALIOPEDICT.cxx)  # set dictionary path
#root_generate_dictionary(
#  "${ROOTPWA_DICTIONARY}"            # path to dictionary to generate
#  "${CMAKE_CURRENT_SOURCE_DIR}/include;${ROOTSYS}/include"  # list of includes
#  "${CMAKE_CURRENT_SOURCE_DIR}/include/RootOutputData.hh"       # list of classes to process
#  )
#EXECUTE_PROCESS(COMMAND rootcint -f /nas02/home/c/b/cbartram/geant4_workdir/dictionary/RootOutputDataCALIOPEDICT.cxx -c -I$(ROOTSYS)/include ${PROJECT_SOURCE_DIR}/include/RootOutputData.hh)
#----------------------------------------------------------------------------
# Locate sources and headers for this project
# NB: headers are included so they will show up in IDEs

file(GLOB sources ${PROJECT_SOURCE_DIR}/src/*.cc)
file(GLOB headers ${PROJECT_SOURCE_DIR}/include/*.hh)
include_directories(headers)

#----------------------------------------------------------------------------
# Add the executable, and link it to the Geant4 libraries and ROOT
#

link_directorie/cry_v1.7)
#link_directories(/nas02/home/c/b/cbartram/geant4_workdir/dictionary)
link_directories(${ROOT_LIBRARY_DIR})
include_directories(${ROOT_INCLUDE_DIR})
#set(ROOTPWA_DICTIONARY /nas02/home/c/b/cbartram/geant4_workdir/dictionary/RootOutputDataCALIOPEDICT.cxx)  # set dictionary path
#root_generate_dictionary(
#  "${ROOTPWA_DICTIONARY}"            # path to dictionary to generate
#  "${CMAKE_CURRENT_SOURCE_DIR}/include;${ROOTSYS}/include"  # list of includes
#  "${CMAKE_CURRENT_SOURCE_DIR}/include/RootOutputData.hh"       # list of classes to process
#  )
#include_directories(${ROOT_INCLUDE_DIR})
add_executable(CALIOPE CALIOPE.cc ${sources} ${headers})
target_link_libraries(CALIOPE ${Geant4_LIBRARIES} ${ROOT_LIBRARIES} /Users/cbartram/cry_v1.7/lib/libCRY.a ${Boost_LIBRARIES})


#----------------------------------------------------------------------------
# Copy all scripts to the build directory, i.e. the directory in which we
# build B1. This is so that we can run the executable directly because it
# relies on these scripts being in the current working directory.
#

set(CALIOPE_SCRIPTS
  CALIOPE.cc
  macros/ion.mac
  vis.mac
  )

foreach(_script ${CALIOPE_SCRIPTS})
  configure_file(
    ${PROJECT_SOURCE_DIR}/${_script}
    ${PROJECT_BINARY_DIR}/${_script}
    COPYONLY
    )
endforeach()

#----------------------------------------------------------------------------
# Install the executable to 'bin' directory under CMAKE_INSTALL_PREFIX
#
install(TARGETS CALIOPE DESTINATION bin)
#----------------------------------------------------------------------------

